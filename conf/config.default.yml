# gin_core 框架默认配置文件
# 此文件包含框架的所有默认配置项，环境特定配置文件会覆盖相应的配置项

# ==================== 系统配置 ====================
system: # 系统功能开关配置
  language: "zh" # 系统语言设置，支持: zh(中文), en(英文)
  useMysql: true # 是否启用MySQL数据库功能
  useRedis: true # 是否启用Redis缓存功能
  useEs: true # 是否启用Elasticsearch搜索引擎功能
  useRabbitMQ: true # 是否启用RabbitMQ消息队列功能
  useSchedule: true # 是否启用定时任务调度功能
  useEtcd: false # 是否启用Etcd配置中心功能

# ==================== HTTP服务配置 ====================
service: # HTTP服务器相关配置
  ip: "0.0.0.0" # 服务监听IP地址，0.0.0.0表示监听所有网卡
  port: 8055 # 服务监听端口，建议使用8000-9000范围内的端口
  pprofPort: 6060 # pprof性能分析工具端口，仅在非生产环境启用
  routePrefix: "routePrefix" # 统一路由前缀，所有API路由都会添加此前缀
  sessionExpire: 3600 # 会话过期时间，单位：秒 (1小时)
  sessionPrefix: "gin_" # Redis中会话缓存的键前缀
  apiTimeout: 1 # 单个API请求超时时间，单位：秒
  readTimeout: 60 # HTTP请求读取超时时间，单位：秒
  writeTimeout: 60 # HTTP响应写入超时时间，单位：秒
  middlewares: # 中间件配置列表，注意：顺序对应中间件调用顺序
    - "exceptionHandler" # 异常处理中间件，统一处理应用异常
    - "traceIdHandler" # 请求追踪ID中间件，为每个请求生成唯一标识
    - "traceLogHandler" # 请求日志中间件，记录请求详细信息
    - "timeoutHandler" # 请求超时中间件，防止请求长时间阻塞

# ==================== 日志配置 ====================
log: # 日志系统配置
  filePath: "./log" # 日志文件存储路径，相对于项目根目录
  maxAge: 30 # 日志文件保存天数，超过此天数的日志文件会被自动删除
  rotationTime: 1 # 日志文件按时间切割间隔，单位：小时，默认1小时切割一次
  rotationSize: 1024 # 日志文件按大小切割阈值，单位：KB，达到此大小会切割新文件
  printCaller: true # 是否在日志中打印调用者信息（函数名和文件位置）
  loggers: # 分级别日志配置，支持不同级别使用不同的配置
    - level: "info" # 日志级别：info级别日志配置
      fileName: "info" # 日志文件名前缀
      rotationSize: 2048 # 此级别日志的切割大小，单位：KB
      rotationTime: 4 # 此级别日志的切割时间间隔，单位：小时
      maxAge: 7 # 此级别日志的保存天数
    - level: "error" # 日志级别：error级别日志配置
      fileName: "error" # 错误日志文件名前缀
      filePath: "./log/error" # 错误日志专用存储路径
      maxSize: 100 # 最大文件大小，单位：MB
      maxAge: 30 # 错误日志保存天数，通常保存更长时间
      rotationSize: 1024 # 错误日志切割大小，单位：KB
      rotationTime: 6 # 错误日志切割时间间隔，单位：小时

# ==================== 数据库配置 ====================
db: # 主数据库连接配置
  host: "127.0.0.1" # 数据库服务器地址
  port: 3306 # 数据库端口，MySQL默认端口
  dbName: "dbName" # 数据库名称，需要提前创建
  username: "username" # 数据库用户名
  password: "password" # 数据库密码，生产环境建议使用加密配置
  loc: "Local" # 时区设置，Local表示使用本地时区
  charset: "utf8mb4" # 数据库字符集，utf8mb4支持完整的UTF-8字符, 默认: utf8mb4
  maxIdleConns: 100 # 连接池最大空闲连接数，建议根据并发量调整, 默认最小10
  maxOpenConns: 100 # 连接池最大打开连接数，建议根据数据库性能调整, 默认最小100
  connMaxIdleTime: 60 # 连接最大空闲时间，单位：秒，超时会被关闭, 默认最小60
  connMaxLifetime: 3600 # 连接最大生存时间，单位：秒 (1小时)
  logLevel: 3 # GORM日志级别（1-关闭所有日志, 2-仅输出错误日志, 3-输出错误日志和慢查询, 4-输出错误日志和慢查询日志和所有sql）, 默认3
  ignoreRecordNotFoundError: true # 是否忽略"记录未找到"错误
  slowThreshold: 500 # 慢查询阈值，单位：毫秒，超过此时间的查询会被记录, 单位毫秒, 默认200毫秒
  migrate: "" # 数据库迁移模式：空-不迁移 create-重建表 update-更新表结构
  tablePrefix: "" # 表名前缀，所有表名都会自动添加此前缀，如设置为"t_"，则User表为t_user
  singularTable: true # 是否使用单数表名，true时User表为user，false时User表为users

# ==================== 数据库读写分离配置 ====================
dbResolvers: # 数据库读写分离和多数据源配置
  - sources: # 写库配置（主库）
      - host: "127.0.0.1" # 主库地址
        port: 3306 # 主库端口
        dbName: "test" # 主库数据库名
        username: "root" # 主库用户名
        password: "" # 主库密码
        migrate: "" # 主库迁移设置
      - host: "127.0.0.1" # 备用主库地址，支持多主库负载均衡
        port: 3306
        dbName: "test1"
        username: "root"
        password: ""
        migrate: ""
    replicas: # 读库配置（从库）
      - host: "127.0.0.1" # 从库地址
        port: 3306 # 从库端口
        dbName: "test2" # 从库数据库名
        username: "root" # 从库用户名
        password: "" # 从库密码
        migrate: "" # 从库迁移设置（通常为空）
    tables: # 指定使用此配置的表名列表
      - "user" # 用户表使用读写分离

# ==================== 消息队列配置 ====================
rabbitMQ: # 主RabbitMQ连接配置
  host: "rabbitMqHost" # RabbitMQ服务器地址
  port: 5672 # RabbitMQ端口，默认5672
  username: "username" # RabbitMQ用户名
  password: "password" # RabbitMQ密码，建议使用加密配置

rabbitMQList: # 多RabbitMQ实例配置，支持连接多个消息队列服务
  - aliasName: "rabbitMQ1" # 实例别名，用于在代码中引用
    host: "rabbitMqHost" # 第一个RabbitMQ实例地址
    port: 5672
    username: "username"
    password: "password"

# ==================== 搜索引擎配置 ====================
es: # Elasticsearch配置
  addresses: # Elasticsearch集群地址列表
    - "10.23.17.83:9200" # ES节点地址，支持多节点集群
  username: "elastic" # ES用户名
  password: "Kingsoft@5688+&." # ES密码，生产环境建议加密

# ==================== 配置中心 ====================
etcd: # Etcd配置中心配置
  addresses: # Etcd集群地址列表
    - "http://esHost:9200" # Etcd节点地址
  username: "elastic" # Etcd用户名
  password: "esPassword" # Etcd密码
  timeout: 5 # 连接超时时间，单位：秒

# ==================== 缓存配置 ====================
# 单Redis配置（主Redis实例）
redis:
  addr: "localhost:6379" # Redis服务器地址和端口
  db: 0 # Redis数据库编号，0-15
  password: "redis_password" # Redis密码，如无密码可留空

# 多Redis配置（支持多个Redis实例）
redisList:
  - aliasName: "redis1" # Redis实例别名，用于在代码中引用
    addr: "redis1.example.com:6379" # 第一个Redis实例地址
    db: 1 # 使用数据库1
    password: "" # 密码，如无密码可留空
  - aliasName: "redis2" # 第二个Redis实例别名
    addr: "redis2.example.com:6379" # 第二个Redis实例地址
    db: 2 # 使用数据库2
    password: ""

# ==================== 邮件配置 ====================
smtp: # SMTP邮件发送配置
  host: "smtp.example.com" # SMTP服务器地址
  port: 587 # SMTP端口，587为TLS端口，25为普通端口
  username: "your_email@example.com" # 发送邮箱用户名
  password: "your_email_password" # 邮箱密码或应用专用密码
  sender: "noreply@example.com" # 发件人邮箱地址

# ==================== 应用配置 ====================
# 应用密钥配置（加密存储示例）
secret: CIPHER(/t8wxJyz5nLKYDa7w8W3oQ==) # 应用密钥，使用CIPHER()格式加密存储
